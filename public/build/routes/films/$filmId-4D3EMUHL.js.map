{
  "version": 3,
  "sources": ["browser-route-module:/Users/kennguyen/Desktop/bit-academy/Random/Remix_test/remix_moviedb/app/routes/films/$filmId.tsx?browser", "../../../../app/routes/films/$filmId.tsx", "../../../../app/components/FilmBanner.tsx", "../../../../app/components/CharacterList.tsx", "../../../../app/components/CommentsList.tsx"],
  "sourcesContent": ["export { default, meta } from \"/Users/kennguyen/Desktop/bit-academy/Random/Remix_test/remix_moviedb/app/routes/films/$filmId.tsx\";", "import { ActionFunction, LoaderFunction, MetaFunction, Outlet, redirect, useLoaderData } from 'remix';\nimport { getFilmById, Film } from '~/api/films';\nimport invariant from 'tiny-invariant';\nimport FilmBanner from '~/components/FilmBanner';\nimport CharacterList from '~/components/CharacterList';\nimport CommentsList from '~/components/CommentsList';\nimport { addComment } from '~/api/comments';\n\nexport const action: ActionFunction = async ({request, params}) => {\n  invariant(params.filmId, 'expected params.filmId');\n  const body = await request.formData();\n\n  const comment = { \n    name: body.get('name') as string,\n    message: body.get('message') as string,\n    filmId: params.filmId\n  }\n\n  const errors = {name: '', message: ''};\n\n  if (!comment.name) {\n    errors.name = 'Please provide your name';\n  }\n\n  if (!comment.message) {\n    errors.message = 'Please provide a comment';\n  }\n\n  if (errors.name || errors.message) {\n    const values = Object.fromEntries(body);\n    return { errors, values }; \n  }\n\n  await addComment(comment);\n\n  return redirect(`/films/${params.filmId}`);\n}\n\nexport const meta: MetaFunction = ({ data }) => {\n  return { title: data.title, description: data.description };\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.filmId, 'expected params.filmId');\n\n  const film = await getFilmById(params.filmId);\n\n  console.log('fetching film... -->', film.title);\n\n  return film;\n};\n\nexport default function Film() {\n  const film = useLoaderData<Film>();\n  return (\n    <div>\n      <FilmBanner film={film} />\n\n      <div className=\"p-10\">\n        <p>{film.description}</p>\n\n        <div className=\"flex py-5 space-x-5\">\n          <CharacterList characters={film.characters} />\n\n          <div className=\"flex-1 flex flex-col justify-between\">\n            <Outlet />\n\n            <CommentsList filmId={film.id} comments={film.comments || []} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { Link } from 'remix';\nimport { Film } from '~/api/films';\n\ntype FilmBannerProps = {\n  film: Film;\n};\n\nexport default function FilmBanner({ film }: FilmBannerProps) {\n  return (\n    <div>\n      <div className=\"w-full h-96 overflow-hidden relative\">\n        <div className=\"w-full h-full flex flex-col absolute justify-between items-start\">\n          <Link to=\"/films\" className=\"text-white p-5 text-2xl hover:underline\">\n            Go Back\n          </Link>\n          <div className=\"bg-slate-700/60 p-5\">\n            <div className=\"text-6xl font-bold text-white\">{film.title}</div>\n          </div>\n        </div>\n\n        <img\n          src={film.movie_banner}\n          className=\"w-full h-auto\"\n          style={{ marginTop: -100 }}\n        />\n      </div>\n    </div>\n  );\n}\n", "import { Link, NavLink } from 'remix';\nimport { FilmCharacter } from '~/api/films';\n\ntype CharacterListProps = {\n  characters?: FilmCharacter[];\n};\nexport default function CharacterList({ characters }: CharacterListProps) {\n  return (\n    <div className=\"flex-1 max-w-md\">\n      <h3 className=\"text-3xl\">Characters</h3>\n\n      <ul className=\"flex flex-col space-y-3 my-3\">\n        {characters?.map((character) => (\n          <li>\n            <NavLink\n              to={'characters/' + character.id}\n              prefetch=\"intent\"\n              className={({ isActive }) =>\n                `w-full hover:underline p-3 rounded border border-slate-400 inline-block ${\n                  isActive\n                    ? 'bg-slate-300 text-black font-bold border-2'\n                    : 'text-blue-500 '\n                } `\n              }\n            >\n              {character.name}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n", "import { Form, useActionData, useTransition } from 'remix';\nimport { CommentEntry } from '~/api/comments';\n\ntype CommentsListProps = {\n  filmId: string;\n  comments: CommentEntry[];\n};\n\nexport default function CommentsList({ filmId, comments }: CommentsListProps) {\n  const transition = useTransition();\n  const actionData = useActionData();\n\n  const inputStyle = (fieldName: string) =>\n    `border border-slate-400 rounded py-2 px-3 inline-block w-full ${\n      actionData?.errors[fieldName] ? ' border-red-500' : ''\n    }`;\n\n  return (\n    <div>\n      <h2 className=\"text-3xl mb-2\">Community Comments</h2>\n\n      <div className=\"flex flex-col space-y-4 my-3\">\n        {comments.map((comment) => (\n          <div className=\"p-4 rounded border border-slate-400\">\n            <div className=\"text-gray-700 font-bold text-xl mb-2\">\n              {comment.name}\n            </div>\n            <p className=\"text-gray-700\">{comment.message}</p>\n          </div>\n        ))}\n\n        <div className=\"p-4 rounded border border-slate-400\">\n          <Form method=\"post\" action={`/films/${filmId}`}>\n            <fieldset disabled={transition.state === 'submitting'}>\n              <label className=\"inline-block my-2\">Name:</label>\n              <input name=\"name\" type=\"text\" className={inputStyle('name')} />\n              {actionData?.errors.name && (\n                <p className=\"text-red-500\">{actionData.errors.name}</p>\n              )}\n\n              <label className=\"inline-block my-2\">Message:</label>\n              <textarea name=\"message\" className={inputStyle('message')} />\n              {actionData?.errors.message && (\n                <p className=\"text-red-500\">{actionData.errors.message}</p>\n              )}\n\n              <button\n                type=\"submit\"\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded my-2\"\n              >\n                {transition.state === 'submitting'\n                  ? 'Adding...'\n                  : 'Add comment'}\n              </button>\n            </fieldset>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
